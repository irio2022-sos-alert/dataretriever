# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import ping_pb2 as ping__pb2


class WhistleblowerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SumResponseTimes = channel.unary_unary(
                '/ping.Whistleblower/SumResponseTimes',
                request_serializer=ping__pb2.PingStatus.SerializeToString,
                response_deserializer=ping__pb2.WbStatus.FromString,
                )


class WhistleblowerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SumResponseTimes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WhistleblowerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SumResponseTimes': grpc.unary_unary_rpc_method_handler(
                    servicer.SumResponseTimes,
                    request_deserializer=ping__pb2.PingStatus.FromString,
                    response_serializer=ping__pb2.WbStatus.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ping.Whistleblower', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Whistleblower(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SumResponseTimes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ping.Whistleblower/SumResponseTimes',
            ping__pb2.PingStatus.SerializeToString,
            ping__pb2.WbStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class DataRetrieverStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PingDomain = channel.unary_unary(
                '/ping.DataRetriever/PingDomain',
                request_serializer=ping__pb2.PingRequest.SerializeToString,
                response_deserializer=ping__pb2.DrStatus.FromString,
                )


class DataRetrieverServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PingDomain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataRetrieverServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PingDomain': grpc.unary_unary_rpc_method_handler(
                    servicer.PingDomain,
                    request_deserializer=ping__pb2.PingRequest.FromString,
                    response_serializer=ping__pb2.DrStatus.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ping.DataRetriever', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DataRetriever(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PingDomain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ping.DataRetriever/PingDomain',
            ping__pb2.PingRequest.SerializeToString,
            ping__pb2.DrStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
